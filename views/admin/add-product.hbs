
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.css"
  integrity="sha512-+VDbDxc9zesADd49pfvz7CgsOl2xREI/7gnzcdyA9XjuTxLXrdpuz21VVIqc5HPfZji2CypSbxx1lgD7BgBK5g=="
  crossorigin="anonymous" referrerpolicy="no-referrer" />


<section>
 <div class="col-12 grid-margin stretch-card">
              <div class="card">
                <div class="card-body">
                  <h4 class="card-title">ADD PRODUCT</h4>
                 {{#if productExisterr}}
                 <p  class="error text-danger">{{productExisterr}}</p>
                 {{/if}}
                  <form class="forms-sample" action="/admin/add-product" method="post" enctype="multipart/form-data">
                   
                      <label for="exampleInputName1">Name</label>
                      <input type="text" class="form-control" id="name" name="name" placeholder="Name" onkeyup="validateName()">
                      <div id="name-error"></div>
                
                      <label for="exampleInputName1">price</label>
                      <input type="number" class="form-control" id="price" name="price" placeholder="price" onkeyup="validatePrice()">
                      <div id="price-error"></div>
                       {{!-- <label for="exampleInputName1">actual price</label>
                      <input type="number" class="form-control" id="actualPrice" name="actualPrice" placeholder="actualPrice" onkeyup="validateActualPrice()">
                      <div id="price-error"></div> --}}
              
                      <label for="exampleInputName1">description</label>
                      <input type="text" class="form-control" id="description" name="description" placeholder="description" onkeyup="validateDescription()">
                      <div id="description-error"></div>

                      <label for="exampleInputName1">stock</label>
                      <input type="number" class="form-control" id="stock" name="stock" placeholder="stock" onkeyup="validateStock()">
                       <div id="stock-error"></div>

                      <label for="exampleInputName1">categories</label>
                      <select name="category" id="exampleInputName1">
                        {{#each catgy}}
                        <option>{{this.category}}</option>
                        {{/each}}
                      </select><br>

                     
               
                 <label for="">image</label><br><img src="/assets/product-images/{{this._id}}.jpg" alt="" style="width:100px;height:auto" id="view">
                    <input type="file" name="image1" class="form-control" id="id_image1">
                     <div id="crop">
              <div class="vald-info" id="info"></div>
              <h5 class="error_form text-danger" id="image1_error_message"></h5>
              <div style="display: flex">
                <div id="image-box1" class="image-container clr">
                </div>
                <button type="button" class="btn btneds bg-success" id="crop-btn1"
                  style=" color: rgb(255, 255, 255); background-color: rgb(12, 12, 0);border-radius: 10px; margin-top: 10px; display: none; width: 50%; margin: 20rem 0rem 0rem 0rem;">crop</button>
              </div>
            </div>
                  <label for="">image</label>
                    <input type="file" name="image2" class="form-control">
                    
                     <label for="">image</label>
                    <input type="file" name="image3" class="form-control">   
                    
                   <label for="">image</label>
                    <input type="file" name="image4" class="form-control">
                    
                    <button type="submit" class="btn btn-primary mr-2">Submit</button>
                    {{!-- <button class="btn btn-light">Cancel</button> --}}
                  </form>
                </div>
              </div>
            </div>
            </section>


            <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
            <script>
  function viewimage(event) {
    document.getElementById('view').src = URL.createObjectURL(event.target.files[0])
  }

  /////////////for image1///////////////////

  const imagebox1 = document.getElementById("image-box1");
  const crop_btn1 = document.getElementById("crop-btn1");
  const input1 = document.getElementById("id_image1");

  // When user uploads the image this event will get triggered
  input1.addEventListener("change", () => {
    // Getting image file object from the input variable
    const img_data1 = input1.files[0];
    // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
    // The new object URL represents the specified File object or Blob object.
    const url1 = URL.createObjectURL(img_data1);
    // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
    imagebox1.innerHTML = `<img src="${url1}" id="image1" style="width:100%;">`;
    // Storing that cropping view image in a variable
    const image1 = document.getElementById("image1");
    // Displaying the image box
    document.getElementById("image-box1").style.display = "block";
    // Displaying the Crop buttton
    document.getElementById("crop-btn1").style.display = "block";
    // Hiding the Post button
    document.getElementById("view").style.display = "block";
    const cropper1 = new Cropper(image1, {
      autoCropArea: 1,
      viewMode: 1,
      scalable: false,
      zoomable: false,
      movable: false,
      minCropBoxWidth: 50,
      minCropBoxHeight: 50,
    });
    // When crop button is clicked this event will get triggered
    crop_btn1.addEventListener("click", () => {
      // This method coverts the selected cropped image on the cropper canvas into a blob object
      cropper1.getCroppedCanvas().toBlob((blob) => {
        // Gets the original image data
        let fileInputElement1 = document.getElementById("id_image1");
        // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
        let file1 = new File([blob], img_data1.name, {
          type: "image/*",
          lastModified: new Date().getTime(),
        });
        // Create a new container
        let container1 = new DataTransfer();
        // Add the cropped image file to the container
        container1.items.add(file1);
        // Replace the original image file with the new cropped image file
        fileInputElement1.files = container1.files;
        document.getElementById("view").src = URL.createObjectURL(
          fileInputElement1.files[0]
        );
        // Hide the cropper box
        document.getElementById("image-box1").style.display = "none";
        // Hide the crop button
        document.getElementById("crop-btn1").style.display = "none";

      });
    });
  });

  function validateName() {
        var name = document.getElementById('name').value.trim();

        if (name.length == 0) {
            nameError.innerHTML = 'Name is Required';
            nameError.style.color = 'red'
            return false;
        }

        if (!name.match(/^[A-Za-z ]*$/)) {
            nameError.innerHTML = 'Write a FullName';
            nameError.style.color = 'red'
            return false;
        }
        if (name.length < 2 ) {
            nameError.innerHTML = 'Enter correct name';
            nameError.style.color = 'red'
            return false;
        }
         if (name.length > 12 ) {
            nameError.innerHTML = 'Enter correct name';
            nameError.style.color = 'red'
            return false;
        }

        nameError.innerHTML = 'Name is valid';
        nameError.style.color = 'green'
        return true;
    }

    function validatePrice() {
        var price = document.getElementById('price').value.trim();

        if (price.length == 0 ) {
            priceError.innerHTML = 'Price is Required';
            priceError.style.color = 'red'
            return false;
        }
         if ( price < 0) {
        priceError.innerHTML = 'Enter a valid positive price';
        priceError.style.color = 'red';
        return false;
    }
        if (!price.match(/^[0-9 ]*$/)) {
            priceError.innerHTML = 'Enter numbers only';
            priceError.style.color = 'red'
            return false;
        }
        priceError.innerHTML = 'valid';
        priceError.style.color = 'green'
        return true;
    }


      function validateActualPrice() {
        var price = document.getElementById('actualPrice').value.trim();

        if (price.length == 0) {
            priceError.innerHTML = 'Price is Required';
            priceError.style.color = 'red'
            return false;
        }
           if ( price < 0) {
        priceError.innerHTML = 'Enter a valid positive price';
        priceError.style.color = 'red';
        return false;
    }
        if (!price.match(/^[0-9 ]*$/)) {
            priceError.innerHTML = 'Enter numbers only';
            priceError.style.color = 'red'
            return false;
        }
        priceError.innerHTML = 'valid';
        priceError.style.color = 'green'
        return true;
    }


        function validateStock() {
        var stock = document.getElementById('stock').value.trim();

        if (stock.length == 0) {
            stockError.innerHTML = 'stock is Required';
            stockError.style.color = 'red'
            return false;
        }
        if(stock <0){
            stockError.innerHTML = 'Enter valid number';
            stockError.style.color = 'red'
            return false;
        }
        if (!stock.match(/^[0-9 ]*$/)) {
            stockError.innerHTML = 'Enter numbers only';
            stockError.style.color = 'red'
            return false;
        }
        stockError.innerHTML = 'valid';
        stockError.style.color = 'green'
        return true;
    }


    function validateDescription() {
        var description = document.getElementById('description').value.trim();

        if (description.length == 0) {
            descriptionError.innerHTML = 'Description is Required';
            descriptionError.style.color = 'red'
            return false;
        }
     
        descriptionError.innerHTML = 'valid';
        descriptionError.style.color = 'green'
        return true;
    }

    function validateImage() {
        var images = document.getElementById('myFile1').value.trim();

        if (images.length == 0) {
            imageError.innerHTML = 'Select an image';
            imageError.style.color = 'red'
            return false;
        }
        imageError.innerHTML = 'valid';
        imageError.style.color = 'green'
        return true;

    }

    function validateImage2() {
        var images2 = document.getElementById('image2').value.trim();

        if (images2.length == 0) {
            imageError2.innerHTML = 'Select an image';
            imageError2.style.color = 'red'
            return false;
        }
        imageError2.innerHTML = 'valid';
        imageError2.style.color = 'green'
        return true;

    }

    function validateImage3() {
        var images3 = document.getElementById('image3').value.trim();

        if (images3.length == 0) {
            imageError3.innerHTML = 'Select an image';
            imageError3.style.color = 'red'
            return false;
        }
        imageError3.innerHTML = 'valid';
        imageError3.style.color = 'green'
        return true;

    }

    function validateImage4() {
        var images4 = document.getElementById('image4').value.trim();

        if (images4.length == 0) {
            imageError4.innerHTML = 'Select an image';
            imageError4.style.color = 'red'
            return false;
        }
        imageError4.innerHTML = 'valid';
        imageError4.style.color = 'green'
        return true;

    }



    $(document).on("submit", "form", function (e) {
        validateName()
        validatePrice()
        validateDescription()
        validateStock()
        
        if (validateName() && validatePrice() && validateDescription()  && validateStock()) {
        } else {
            e.preventDefault();
         //   alert('Invalid data!');
            return false;
        }
    })
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.js"
  integrity="sha512-ZK6m9vADamSl5fxBPtXw6ho6A4TuX89HUbcfvxa2v2NYNT/7l8yFGJ3JlXyMN4hlNbz0il4k6DvqbIW5CCwqkw=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>













  
